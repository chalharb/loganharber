name: Production Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

      - name: Run Lint
        run: yarn lint

      - name: Report Coverage
        if: always()
        uses: davelosert/vitest-coverage-report-action@v1

      - name: Generating coverage badges
        if: always()
        uses: jpb06/jest-badges-action@latest
        with:
          branches: main
          no-commit: true
          output-folder: ./coverage/badges

      - name: Archive code coverage results directory
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: ./coverage

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Compile Typescript and Build
        run: yarn build

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist

  create-release-notes:
    name: Create Release Notes
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download a single artifact
        id: download
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report

      - name: "Echo download path"
        run: ls -lah

      - name: Stage coverage report directory
        run: git add ${{steps.download.outputs.download-path}}

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          git-message: "chore(release): {version}"
          release-count: 0
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Create Release
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist"
          tag: ${{ steps.changelog.outputs.tag }}
          makeLatest: true
          body: ${{ steps.changelog.outputs.clean_changelog }}
